 (filename1 filename2)←{x}CompareCommits y;space;folder;currentBranch;noOf;parms;commits1;commits2;hash1;hash2;list;noofBytes;flag;exe;alias
⍝ Allows the inspection of all differences between two hashes.\\
⍝ In case the right argument is empty the last commit is compared with the first commit that cannot be found in `RefLog.
⍝ For this to make sense the current branch must not be "main" (or the deprecated "master").\\
⍝ Instead one can specify two commits explicitly via the right argument.
⍝ (For comparing the work dir with the current branch see `???????????????`.\\
⍝ For what `x` can actually be see `EstablishProject`.\\
⍝ Returns either two empty vectors in case no differences were detected or two filenames otherwise.\\
⍝ If the user command `CompareFiles` and one of its comparison utilities is available the two files are compared straight away.
 (space folder)←EstablishProject x
 filename1←filename2←''
 currentBranch←CurrentBranch folder
 ('The current branch must not be "',currentBranch,'"')U.Assert~(⊂currentBranch)∊'main' 'master'
 :If 0=≢y
     noOf←≢commits1←{⍵[;1]}folder RefLog currentBranch
     parms←⎕NS''
     parms.noOf←1+noOf
     commits2←{⍵[;1]}parms Log folder
     (hash1 hash2)←commits1[1,1++/∧\commits1∊commits2]
 :Else
     '⍵ must be either empty or a two-element vector with two commits (hashes)'U.Assert 2=≢y
     (hash1 hash2)←y
 :EndIf
 :If 0<≢list←folder DiffBetween hash1 hash2
     (filename1 filename2)←'txt'∘F.GetTempFilename2¨2⍴⊂''
     noofBytes←CompareCommits_ list(currentBranch,': ',hash1)(currentBranch,': ',hash2)folder currentBranch hash1 hash2 filename1 filename2
     :If 0<noofBytes
         :If flag←9=⎕SE.⎕NC'CompareFiles'
             :Trap 911
                 (exe alias)←⎕SE.CompareFiles.EstablishCompareEXE''
             :Else
                 :Return
             :EndTrap
         :AndIf 0<≢exe
             parms←⎕SE.CompareFiles.ComparisonTools.⍎'CreateParmsFor',alias
             parms.(file1 file2)←filename1 filename2
             parms.(use name)←exe alias
             parms.(caption1 caption2)←(currentBranch,': ',hash1)(currentBranch,': ',hash2)
             {}⎕SE.CompareFiles.Compare parms
         :EndIf
     :Else
         ⎕←'No APL objects found to compare'
     :EndIf
 :EndIf
⍝Done

 R←Test_UC_101(stopFlag batchFlag);⎕TRAP;stop;rc;msg;buff;tempDir
⍝ Runs all user commands on a Git-managed folder that is NOT a Cider project
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 R←T._Failed

 tempDir←##.FilesAndDirs.GetTempSubDir'APLGit2-Tests'
 (⊂'This' 'and that')⎕NPUT tempDir,'/foo.txt'
 (⊂'r←Hello' 'r←''World''')⎕NPUT tempDir,'/Hello.aplf'
 {}⎕SH'git -C "',(##.FilesAndDirs.EnforceSlash tempDir),'" init '

 stop←0

 (rc msg buff)←stop ∆UCMD'IsGitProject "',tempDir,'"'
 msg Assert rc=0
 →T.GoToTidyUp 0<≢msg
 →T.GoToTidyUp'yes'≢buff

 (rc msg buff)←stop ∆UCMD'IsDirty "',tempDir,'"'
 msg Assert rc=0
 →T.GoToTidyUp 0<≢msg
 →T.GoToTidyUp'Dirty'≢buff

 (rc msg buff)←stop ∆UCMD'Status "',tempDir,'"'
 msg Assert rc=0
 →T.GoToTidyUp 0<≢msg

 (rc msg buff)←stop ∆UCMD'Add . -project="',tempDir,'"'
 msg Assert rc=0
 →T.GoToTidyUp 0<≢msg

 (rc msg buff)←stop ∆UCMD'Commit "',tempDir,'" -m="firlefanz" -add'
 msg Assert rc=0
 →T.GoToTidyUp 0<≢msg

 (rc msg buff)←stop ∆UCMD'IsDirty "',tempDir,'"'
 msg Assert rc=0
 →T.GoToTidyUp 0<≢msg
 →T.GoToTidyUp'Clean'≢buff

 (rc msg buff)←stop ∆UCMD'CurrentBranch "',tempDir,'"'
 msg Assert rc=0
 →T.GoToTidyUp 0<≢msg
 →T.GoToTidyUp'main'≢buff

 (rc msg buff)←stop ∆UCMD'ListBranches "',tempDir,'"'
 msg Assert rc=0
 →T.GoToTidyUp 0<≢msg
 →T.GoToTidyUp'* main'≢∊buff

 (rc msg buff)←stop ∆UCMD'Log "',tempDir,'"'
 msg Assert rc=0
 →T.GoToTidyUp 0<≢msg
 →T.GoToTidyUp'firlefanz'{⍺≢(-≢⍺)↑⍵}∊buff

 (rc msg buff)←stop ∆UCMD'Diff "',tempDir,'"'
 msg Assert rc=0
 →T.GoToTidyUp 0<≢msg
 →T.GoToTidyUp 0≠≢buff

 R←T._OK

∆TidyUp:
 {}⎕SH'rmdir /s /q "',tempDir,'"'
⍝Done

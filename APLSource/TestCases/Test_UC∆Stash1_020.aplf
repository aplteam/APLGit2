 R←Test_UC∆Stash1_020(stopFlag batchFlag);⎕TRAP;dir;rc;msg;list;res;more;parms
⍝ Executes ]StashDrop on a directory
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 R←T._Failed

 dir←∆StashDir,'/SourceCode'
 'Create!'FilesAndDirs.CheckPath dir

 (⊂'Hello')⎕NPUT dir,'/file_1.txt'
 ##.APLGit2.Add ∆StashDir
 parms←##.APLGit2.CreateStashPushParms
 parms.folder←∆StashDir
 parms.msg←'First stash'
 res←##.APLGit2.StashPush parms
 →T.GoToTidyUp~∨/'Saved working directory and index state'⍷∊res
 ⎕MKDIR dir
 (⊂'Hello2')⎕NPUT dir,'/file_2.txt'
 ##.APLGit2.Add ∆StashDir
 parms←##.APLGit2.CreateStashPushParms
 parms.folder←∆StashDir
 parms.msg←'Second stash'
 res←##.APLGit2.StashPush parms
 →T.GoToTidyUp~∨/'Saved working directory and index state'⍷∊res
 ⎕MKDIR dir
 (⊂'Hello3')⎕NPUT dir,'/file_3.txt'
 ##.APLGit2.Add ∆StashDir
 parms←##.APLGit2.CreateStashPushParms
 parms.folder←∆StashDir
 parms.msg←'Third stash'
 res←##.APLGit2.StashPush parms
 →T.GoToTidyUp~∨/'Saved working directory and index state'⍷∊res

 list←##.APLGit2.StashList ∆StashDir
 →T.GoToTidyUp 3≠≢list

 (rc more res)←∆UCMD'StashDrop ',∆StashDir,' -n=2'
 more Assert rc=0
 →T.GoToTidyUp~∨/'Dropped stash@{2}'⍷∊res
 list←##.APLGit2.StashList ∆StashDir
 →T.GoToTidyUp 2≠≢list
 (rc more res)←∆UCMD'StashDrop ',∆StashDir
 more Assert rc=0
 →T.GoToTidyUp~∨/'Dropped stash@{0}'⍷∊res
 list←##.APLGit2.StashList ∆StashDir
 →T.GoToTidyUp 1<≢list

 res←##.APLGit2.StashClear ∆StashDir
 →T.GoToTidyUp~∨/'stash clear =>'⍷∊res

∆TidyUp:
 ##.APLGit2.StashClear ∆StashDir
 (rc msg)←FilesAndDirs.RmDirByForce dir
 msg Assert 0=rc
⍝Done
